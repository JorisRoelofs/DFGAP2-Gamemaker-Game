<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprite2</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>stress = 0.5;
happiness = 0.5;
sleep = random_range(0.8,1);
sleepChange = -0.1/room_speed;
sleepingChange = 0.2/room_speed;

objMyBed = instance_nearest(x,y,objBed);
speedMax = 60 / room_speed;
sleepMinMin = 0.5;
sleepMinMax = 0.3;
sleepMin = random_range(sleepMinMin,sleepMinMax);
sleepDesire = 0;

lightIncrease = 0.5/room_speed;

scrPlayerWandering();

UIBars = instance_create(x,y,objUIBars);
UIBars.player = id;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(sleepDesire = 0) sleep += sleepChange;

if(sleepDesire &gt; 0)
{
    speed = 0;
    x = objMyBed.x + 0.5*sprite_get_height(sprite_index);
    y = objMyBed.y + 0.5*sprite_get_height(sprite_index);
    sleep += sleepingChange;
    if(sleep &gt;= sleepDesire)
    {
        sleepDesire = 0;
        sleepMin = random_range(sleepMinMin,sleepMinMax);
    }
}
else if(sleep &lt; sleepMin)
{
    mp_potential_step(objMyBed.x, objMyBed.y, speedMax, false);
}
else
{
    if(distanceTravelled &gt; distanceMax)
    {
        speed = 0;
        scrPlayerWandering();
    }
    else
    {
        distanceTravelled += max(60/room_speed,speed);
        stress += stressChange;
        happiness += happinessChange;
    }
}

if(stress &lt; 0 || stress &gt; 1) game_restart();
if(happiness &lt; 0 || happiness &gt; 1) game_restart();

sleep = clamp(sleep,0,1);
stress = clamp(stress,0,1);
happiness = clamp(happiness,0,1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objBed">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(other.id = objMyBed.id &amp;&amp; sleep &lt; sleepMin) sleepDesire = random_range(0.8,1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objSolid">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objLight">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(other.image_index = 1) stress += lightIncrease;
if(other.image_index = 2) stress -= lightIncrease;
if(other.image_index = 3) happiness += lightIncrease;
if(other.image_index = 4) happiness -= lightIncrease;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
