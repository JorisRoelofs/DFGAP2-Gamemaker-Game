<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>Idle_down</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>sprPlayerMask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scrPlayerEmotionsStandard();
scrPlayerStatsStandard();
scrPlayerStatsEmotionsPersonalized();

mask_index = sprPlayerMask;
speedMaxMax = 1200 / room_speed;
speedMax = speedMaxMax;
scrPlayerWandering();

progressExist = -1;
awakened = false;
alreadyInfluenced = false;

xPrev = x;
yPrev = y;

timeTillTired = 5;
tiredTime = timeTillTired;
slowMultiplier = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(scrActivity(statName));
else
{
    if(distanceTravelled &gt; distanceMax)
    {
        speed = 0;
        scrPlayerWandering();
    }
    else
    {
        distanceTravelled += max(60/room_speed,speed);
    }
}

for(i=0;i&lt;array_length_1d(emoName);i++)
{
    //if(emoValue[i] &lt; 0 || emoValue[i] &gt; 1) game_restart();
    if(emoValue[i] &gt; 1 || (emoValue[i] &lt; 0 &amp;&amp; tiredTime &gt;= timeTillTired))
    {
        emoValue[i] = 0;
        tiredTime = 0;
    }
    emoValue[i] = clamp(emoValue[i],0,1);
}

if(tiredTime &lt; timeTillTired)
{
    tiredTime += 1/room_speed;
    slowMultiplier = 0.1;
}
else slowMultiplier = 1;

alreadyInfluenced = false;

if(abs(x-xPrev) + abs(y-yPrev) &gt; 0)
{
    if(abs(x-xPrev) &gt; abs(y-yPrev))
    {
        if(x-xPrev &gt; 0) sprite_index = Right;
        else sprite_index = Left;
    }
    else
    {
        if(y-yPrev &gt; 0) sprite_index = Down;
        else sprite_index = Up;
    }
}
else
{
    switch(sprite_index)
    {
        case Down: sprite_index = Idle_down; break;
        case Left: sprite_index = Idle_left; break;
        case Right: sprite_index = Idle_right; break;
        case Up: sprite_index = Idle_up; break;
    } 
}

xPrev = x;
yPrev = y;
speedMax = speedMaxMax * max(emoValue[0],0.1);
image_speed = 0.2*max(emoValue[0],0.1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objLampSlider">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!alreadyInfluenced)
{
    if((other.slider.pHandle-0.5) &gt; 0) emoValue[0] += 2 * slowMultiplier * abs(emoLightIncrease[0,0]) * (other.slider.pHandle-0.5) / room_speed;
    else emoValue[0] += 2 * abs(emoLightIncrease[0,0]) * (other.slider.pHandle-0.5) / room_speed;
}
alreadyInfluenced = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objLight">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!alreadyInfluenced)
{
    for(i = 0; i &lt; array_length_1d(emoName);i++)
    {
        if(emoLightIncrease[i,other.index] &gt; 0) emoValue[i] += slowMultiplier*emoLightIncrease[i,other.index]/room_speed;
        else emoValue[i] += emoLightIncrease[i,other.index]/room_speed;
    }
}
alreadyInfluenced = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objTool">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>for(i = 0; i &lt; array_length_1d(statName); i++)
{
    if(statTool[i] != -1
    &amp;&amp; instance_exists(statTool[i])
    &amp;&amp; statValue[i] &lt;= 0
    &amp;&amp; statTool[i].id = other.id)
        statTool[i].owner = id;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objInteractible">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>for(i = 0; i &lt; array_length_1d(statName); i++)
{
    if(statObject[i] != -1
    &amp;&amp; instance_exists(statObject[i])
    &amp;&amp; statValue[i] &lt;= 0
    &amp;&amp; statObject[i].id = other.id)
        statActivityTrue[i] = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objSolid">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scrDrawEmoBar();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
